{"version":3,"sources":["scripts/background.js","countries.json","scripts/elements.js","scripts/utils.js","scripts/const.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/addDays/index.js","node_modules/date-fns/esm/getDaysInMonth/index.js","node_modules/date-fns/esm/addMonths/index.js","node_modules/date-fns/esm/add/index.js","node_modules/date-fns/esm/isWeekend/index.js","node_modules/date-fns/esm/addBusinessDays/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/addHours/index.js","node_modules/date-fns/esm/startOfWeek/index.js","node_modules/date-fns/esm/startOfISOWeek/index.js","node_modules/date-fns/esm/getISOWeekYear/index.js","node_modules/date-fns/esm/startOfISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/startOfDay/index.js","node_modules/date-fns/esm/differenceInCalendarDays/index.js","node_modules/date-fns/esm/setISOWeekYear/index.js","node_modules/date-fns/esm/addISOWeekYears/index.js","node_modules/date-fns/esm/addMinutes/index.js","node_modules/date-fns/esm/addQuarters/index.js","node_modules/date-fns/esm/addSeconds/index.js","node_modules/date-fns/esm/addWeeks/index.js","node_modules/date-fns/esm/addYears/index.js","node_modules/date-fns/esm/areIntervalsOverlapping/index.js","node_modules/date-fns/esm/closestIndexTo/index.js","node_modules/date-fns/esm/closestTo/index.js","node_modules/date-fns/esm/compareAsc/index.js","node_modules/date-fns/esm/compareDesc/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/date-fns/esm/isSameDay/index.js","node_modules/date-fns/esm/differenceInBusinessDays/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarMonths/index.js","node_modules/date-fns/esm/getQuarter/index.js","node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarYears/index.js","node_modules/date-fns/esm/differenceInDays/index.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/differenceInHours/index.js","node_modules/date-fns/esm/subISOWeekYears/index.js","node_modules/date-fns/esm/differenceInISOWeekYears/index.js","node_modules/date-fns/esm/differenceInMinutes/index.js","node_modules/date-fns/esm/differenceInMonths/index.js","node_modules/date-fns/esm/differenceInQuarters/index.js","node_modules/date-fns/esm/differenceInSeconds/index.js","node_modules/date-fns/esm/differenceInWeeks/index.js","node_modules/date-fns/esm/differenceInYears/index.js","node_modules/date-fns/esm/eachDayOfInterval/index.js","node_modules/date-fns/esm/eachMonthOfInterval/index.js","node_modules/date-fns/esm/eachWeekOfInterval/index.js","node_modules/date-fns/esm/isSunday/index.js","node_modules/date-fns/esm/eachWeekendOfInterval/index.js","node_modules/date-fns/esm/startOfMonth/index.js","node_modules/date-fns/esm/endOfMonth/index.js","node_modules/date-fns/esm/eachWeekendOfMonth/index.js","node_modules/date-fns/esm/startOfYear/index.js","node_modules/date-fns/esm/endOfYear/index.js","node_modules/date-fns/esm/eachWeekendOfYear/index.js","node_modules/date-fns/esm/eachYearOfInterval/index.js","node_modules/date-fns/esm/endOfDay/index.js","node_modules/date-fns/esm/endOfDecade/index.js","node_modules/date-fns/esm/endOfHour/index.js","node_modules/date-fns/esm/endOfWeek/index.js","node_modules/date-fns/esm/endOfISOWeek/index.js","node_modules/date-fns/esm/endOfISOWeekYear/index.js","node_modules/date-fns/esm/endOfMinute/index.js","node_modules/date-fns/esm/endOfQuarter/index.js","node_modules/date-fns/esm/endOfSecond/index.js","node_modules/date-fns/esm/endOfToday/index.js","node_modules/date-fns/esm/endOfTomorrow/index.js","node_modules/date-fns/esm/endOfYesterday/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/format/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/cloneObject/index.js","node_modules/date-fns/esm/formatDistance/index.js","node_modules/date-fns/esm/formatDistanceStrict/index.js","node_modules/date-fns/esm/formatDistanceToNow/index.js","node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","node_modules/date-fns/esm/formatISO/index.js","node_modules/date-fns/esm/formatISO9075/index.js","node_modules/date-fns/esm/formatRFC3339/index.js","node_modules/date-fns/esm/formatRFC7231/index.js","node_modules/date-fns/esm/formatRelative/index.js","node_modules/date-fns/esm/fromUnixTime/index.js","node_modules/date-fns/esm/getDate/index.js","node_modules/date-fns/esm/getDay/index.js","node_modules/date-fns/esm/getDayOfYear/index.js","node_modules/date-fns/esm/isLeapYear/index.js","node_modules/date-fns/esm/getDaysInYear/index.js","node_modules/date-fns/esm/getDecade/index.js","node_modules/date-fns/esm/getHours/index.js","node_modules/date-fns/esm/getISODay/index.js","node_modules/date-fns/esm/getISOWeek/index.js","node_modules/date-fns/esm/getISOWeeksInYear/index.js","node_modules/date-fns/esm/getMilliseconds/index.js","node_modules/date-fns/esm/getMinutes/index.js","node_modules/date-fns/esm/getMonth/index.js","node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","node_modules/date-fns/esm/getSeconds/index.js","node_modules/date-fns/esm/getTime/index.js","node_modules/date-fns/esm/getUnixTime/index.js","node_modules/date-fns/esm/getWeekYear/index.js","node_modules/date-fns/esm/startOfWeekYear/index.js","node_modules/date-fns/esm/getWeek/index.js","node_modules/date-fns/esm/getWeekOfMonth/index.js","node_modules/date-fns/esm/lastDayOfMonth/index.js","node_modules/date-fns/esm/getWeeksInMonth/index.js","node_modules/date-fns/esm/getYear/index.js","node_modules/date-fns/esm/isAfter/index.js","node_modules/date-fns/esm/isBefore/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/isEqual/index.js","node_modules/date-fns/esm/isExists/index.js","node_modules/date-fns/esm/isFirstDayOfMonth/index.js","node_modules/date-fns/esm/isFriday/index.js","node_modules/date-fns/esm/isFuture/index.js","node_modules/date-fns/esm/isLastDayOfMonth/index.js","node_modules/date-fns/esm/isMonday/index.js","node_modules/date-fns/esm/isPast/index.js","node_modules/date-fns/esm/startOfHour/index.js","node_modules/date-fns/esm/isSameHour/index.js","node_modules/date-fns/esm/isSameWeek/index.js","node_modules/date-fns/esm/isSameISOWeek/index.js","node_modules/date-fns/esm/isSameISOWeekYear/index.js","node_modules/date-fns/esm/startOfMinute/index.js","node_modules/date-fns/esm/isSameMinute/index.js","node_modules/date-fns/esm/isSameMonth/index.js","node_modules/date-fns/esm/startOfQuarter/index.js","node_modules/date-fns/esm/isSameQuarter/index.js","node_modules/date-fns/esm/startOfSecond/index.js","node_modules/date-fns/esm/isSameSecond/index.js","node_modules/date-fns/esm/isSameYear/index.js","node_modules/date-fns/esm/isSaturday/index.js","node_modules/date-fns/esm/isThisHour/index.js","node_modules/date-fns/esm/isThisISOWeek/index.js","node_modules/date-fns/esm/isThisMinute/index.js","node_modules/date-fns/esm/isThisMonth/index.js","node_modules/date-fns/esm/isThisQuarter/index.js","node_modules/date-fns/esm/isThisSecond/index.js","node_modules/date-fns/esm/isThisWeek/index.js","node_modules/date-fns/esm/isThisYear/index.js","node_modules/date-fns/esm/isThursday/index.js","node_modules/date-fns/esm/isToday/index.js","node_modules/date-fns/esm/isTomorrow/index.js","node_modules/date-fns/esm/isTuesday/index.js","node_modules/date-fns/esm/isWednesday/index.js","node_modules/date-fns/esm/isWithinInterval/index.js","node_modules/date-fns/esm/subDays/index.js","node_modules/date-fns/esm/isYesterday/index.js","node_modules/date-fns/esm/lastDayOfDecade/index.js","node_modules/date-fns/esm/lastDayOfWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","node_modules/date-fns/esm/lastDayOfQuarter/index.js","node_modules/date-fns/esm/lastDayOfYear/index.js","node_modules/date-fns/esm/lightFormat/index.js","node_modules/date-fns/esm/max/index.js","node_modules/date-fns/esm/min/index.js","node_modules/date-fns/esm/_lib/setUTCDay/index.js","node_modules/date-fns/esm/_lib/setUTCISODay/index.js","node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/setUTCWeek/index.js","node_modules/date-fns/esm/parse/_lib/parsers/index.js","node_modules/date-fns/esm/parse/index.js","node_modules/date-fns/esm/parseISO/index.js","node_modules/date-fns/esm/parseJSON/index.js","node_modules/date-fns/esm/roundToNearestMinutes/index.js","node_modules/date-fns/esm/setMonth/index.js","node_modules/date-fns/esm/set/index.js","node_modules/date-fns/esm/setDate/index.js","node_modules/date-fns/esm/setDay/index.js","node_modules/date-fns/esm/setDayOfYear/index.js","node_modules/date-fns/esm/setHours/index.js","node_modules/date-fns/esm/setISODay/index.js","node_modules/date-fns/esm/setISOWeek/index.js","node_modules/date-fns/esm/setMilliseconds/index.js","node_modules/date-fns/esm/setMinutes/index.js","node_modules/date-fns/esm/setQuarter/index.js","node_modules/date-fns/esm/setSeconds/index.js","node_modules/date-fns/esm/setWeek/index.js","node_modules/date-fns/esm/setWeekYear/index.js","node_modules/date-fns/esm/setYear/index.js","node_modules/date-fns/esm/startOfDecade/index.js","node_modules/date-fns/esm/startOfToday/index.js","node_modules/date-fns/esm/startOfTomorrow/index.js","node_modules/date-fns/esm/startOfYesterday/index.js","node_modules/date-fns/esm/subMonths/index.js","node_modules/date-fns/esm/sub/index.js","node_modules/date-fns/esm/subBusinessDays/index.js","node_modules/date-fns/esm/subHours/index.js","node_modules/date-fns/esm/subMinutes/index.js","node_modules/date-fns/esm/subQuarters/index.js","node_modules/date-fns/esm/subSeconds/index.js","node_modules/date-fns/esm/subWeeks/index.js","node_modules/date-fns/esm/subYears/index.js","node_modules/date-fns/esm/constants/index.js","node_modules/date-fns/esm/index.js","scripts/fetch.js","node_modules/process/browser.js","node_modules/path-browserify/index.js","node_modules/dotenv/lib/main.js","scripts/app.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["body","document","querySelector","backgroundImage","code","style","console","log","module","exports","cityLocation","time","description","temperature","img","feelsLike","humidity","wind","toggle","changeBtn","modalOuter","closeBtn","saveChangeBtn","selectCity","selectCountry","form","invalidInputMessage","toTitleCase","phrase","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","mpsToKph","mps","Math","round","generateOptions","options","countriesList","singleCountry","name","innerHTML","OPEN_WEATHER_KEY","OPEN_WEATHER_BASE","TIME_ZONE_KEY","TIME_ZONE_BASE","ICON_BASE","toInteger","dirtyNumber","NaN","number","Number","isNaN","ceil","floor","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","warn","Error","stack","addDays","dirtyDate","dirtyAmount","date","amount","setDate","getDate","getDaysInMonth","year","getFullYear","monthIndex","getMonth","lastDayOfMonth","setFullYear","setHours","addMonths","desiredMonth","dateWithDesiredMonth","daysInMonth","setMonth","min","add","duration","years","months","weeks","days","hours","minutes","seconds","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","isWeekend","day","getDay","addBusinessDays","getHours","sign","fullWeeks","restDays","abs","addMilliseconds","timestamp","MILLISECONDS_IN_HOUR","addHours","startOfWeek","dirtyOptions","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","diff","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_MINUTE","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","hasNegativeUTCOffset","millisecondsPartOfTimezoneOffset","startOfDay","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","setISOWeekYear","dirtyISOWeekYear","isoWeekYear","addISOWeekYears","addMinutes","addQuarters","addSeconds","addWeeks","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","undefined","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","inclusive","closestIndexTo","dirtyDateToCompare","dirtyDatesArray","dateToCompare","timeToCompare","datesArray","forEach","Array","result","minDistance","index","currentDate","distance","closestTo","compareAsc","dateLeft","dateRight","compareDesc","isValid","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","differenceInBusinessDays","calendarDifference","differenceInCalendarISOWeekYears","MILLISECONDS_IN_WEEK","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","monthDiff","getQuarter","quarter","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","differenceInDays","differenceInMilliseconds","differenceInHours","subISOWeekYears","differenceInISOWeekYears","difference","isLastISOWeekYearNotFull","differenceInMinutes","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","dates","step","push","eachMonthOfInterval","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","isSunday","eachWeekendOfInterval","dateInterval","weekends","startOfMonth","endOfMonth","month","eachWeekendOfMonth","startOfYear","cleanDate","endOfYear","eachWeekendOfYear","eachYearOfInterval","endOfDay","endOfDecade","decade","endOfHour","setMinutes","endOfWeek","endOfISOWeek","endOfISOWeekYear","setMilliseconds","getMilliseconds","endOfMinute","endOfQuarter","currentMonth","endOfSecond","endOfToday","now","endOfTomorrow","endOfYesterday","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","replace","addSuffix","comparison","buildFormatLongFn","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","context","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","_dirtyOptions","rem100","localize","era","dayPeriod","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","value","valueCallback","rest","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","object","predicate","key","hasOwnProperty","array","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","output","formatters","y","signedYear","getUTCFullYear","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","startOfUTCISOWeek","getUTCDay","setUTCDate","getUTCISOWeekYear","setUTCFullYear","startOfUTCISOWeekYear","getUTCISOWeek","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","b","B","K","k","X","_localize","originalDate","_originalDate","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","delimiter","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","p","P","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","utcDate","formatterOptions","substring","firstCharacter","longFormatter","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","input","assign","target","dirtyObject","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","localizeOptions","Boolean","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethod","roundingMethodFn","formatDistanceToNow","formatDistanceToNowStrict","formatISO","concat","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","hour","minute","getMinutes","second","getSeconds","separator","formatISO9075","formatRFC3339","fractionDigits","fractionalSecond","formatRFC7231","dayName","dayOfMonth","monthName","baseDate","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","getDayOfYear","isLeapYear","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeeksInYear","thisYear","nextYear","valueOf","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getUnixTime","getWeekYear","startOfWeekYear","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeeksInMonth","getYear","isAfter","isBefore","isDate","isEqual","dirtyLeftDate","dirtyRightDate","isExists","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","isMonday","isPast","startOfHour","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","startOfMinute","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","startOfQuarter","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","startOfSecond","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameYear","isSaturday","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isWednesday","isWithinInterval","startTime","subDays","isYesterday","lastDayOfDecade","lastDayOfWeek","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfYear","lightFormat","max","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","setUTCISODay","setUTCISOWeek","dirtyISOWeek","setUTCWeek","dirtyWeek","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","wholeWeekDays","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","isArray","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","filter","reverse","setterArray","convertedDate","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","timeString","substr","exec","regex","captures","century","isWeekDate","parseDateUnit","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","fourthOfJanuaryDay","daysInMonths","_year","_hours","parseJSON","parts","UTC","roundToNearestMinutes","nearestTo","roundedMinutes","remainderMinutes","addedMinutes","dirtyMonth","dirtyDayOfMonth","setDay","delta","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","dirtyMilliseconds","dirtyMinutes","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDecade","startOfToday","startOfTomorrow","startOfYesterday","subMonths","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","subBusinessDays","subHours","subMinutes","subQuarters","subSeconds","subWeeks","subYears","maxTime","minTime","fetchLocalTime","lat","lng","localTime","tzResponse","fetch","tzData","json","formatted","error","failedToFetch","textContent","fetchData","cityID","countryID","metricResponse","imperialResponse","status","metricData","imperialData","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","nextTick","Item","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","fs","require","path","message","NEWLINE","RE_INI_KEY_VAL","RE_NEWLINES","NEWLINES_MATCH","src","debug","obj","line","idx","keyValueArr","val","isDoubleQuoted","isSingleQuoted","trim","config","dotenvPath","resolve","encoding","parsed","readFileSync","keys","location","city","country","tempUnit","openModal","classList","closeModal","remove","reset","hidden","validadeNewEntry","errorCode","displayData","cityWeather","cod","longitude","coord","lon","latitude","sys","weather","main","temp","feels_like","speed","icon","mirrorToLocalStorage","handleClick","event","preventDefault","type","localStorage","setItem","JSON","stringify","restoreFromLocalStorage","lsLocation","getItem","addEventListener","checked","isOutside","closest","window","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","appendChild","getElementById","createElement","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"app.c09d0a7b.js","sourceRoot":"..","sourcesContent":["const body = document.querySelector('body');\n\n/**\n * backgroundImage - change the background image based on the weather\n * @param {String} code\n * @return {String} image url\n */\nfunction backgroundImage(code) {\n  switch (code) {\n    case '01d':\n      // clear sky - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/TA5bUTySOrg/1600x900)';\n      break;\n    case '02d':\n      // few clouds - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/TSgwbumanuE/1600x900)';\n      break;\n    case '03d':\n      // scattered clouds - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/Ioy3OB0U5cI/1600x900)';\n      break;\n    case '04d':\n      body.style.backgroundImage =\n        // broken clouds - day\n        'url(https://source.unsplash.com/wgLPy2YBXuc/1600x900)';\n      break;\n    case '09d':\n      // shower rain - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/pGQbWXBC1dA/1600x900)';\n      break;\n    case '10d':\n      // rain - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/pv2ZlDfstXc/1600x900)';\n      break;\n    case '11d':\n      // thunderstorm - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/SgLtJRPm_8U/1600x900)';\n      break;\n    case '13d':\n      // shower snow - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/w8hWTFpGtpY/1600x900)';\n      break;\n    case '50d':\n      // shower mist - day\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/7CME6Wlgrdk/1600x900)';\n      break;\n    case '01n':\n      // clear sky - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/HVFYFns30-I/1600x900)';\n      break;\n    case '02n':\n      // few clouds - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/k2-hbUaXlEs/1600x900)';\n      break;\n    case '03n':\n      // scattered clouds - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/ve_uN9V8xqU/1600x900)';\n      break;\n    case '04n':\n      // broken clouds - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/0N6yGHQSlmk/1600x900)';\n      break;\n    case '09n':\n      // shower rain - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/OwqsrpzqbQk/1600x900)';\n      break;\n    case '10n':\n      // rain - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/OKlo0r3gBcQ/1600x900)';\n      break;\n    case '11n':\n      // thunderstorm - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/5YryiYcFvtA/1600x900)';\n      break;\n    case '13n':\n      // snow - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/SH4GNXNj1RA/1600x900)';\n      break;\n    case '50n':\n      // mist - night\n      body.style.backgroundImage =\n        'url(https://source.unsplash.com/oOOw0jXn7Kg/1600x900)';\n      break;\n\n    default:\n      console.log('Error fetching background image');\n      break;\n  }\n}\n\nexport default backgroundImage;\n","module.exports = [\n  { \"name\": \"----\", \"code\": \"\" },\n  { \"name\": \"Afghanistan\", \"code\": \"AF\" },\n  { \"name\": \"Åland Islands\", \"code\": \"AX\" },\n  { \"name\": \"Albania\", \"code\": \"AL\" },\n  { \"name\": \"Algeria\", \"code\": \"DZ\" },\n  { \"name\": \"American Samoa\", \"code\": \"AS\" },\n  { \"name\": \"AndorrA\", \"code\": \"AD\" },\n  { \"name\": \"Angola\", \"code\": \"AO\" },\n  { \"name\": \"Anguilla\", \"code\": \"AI\" },\n  { \"name\": \"Antarctica\", \"code\": \"AQ\" },\n  { \"name\": \"Antigua and Barbuda\", \"code\": \"AG\" },\n  { \"name\": \"Argentina\", \"code\": \"AR\" },\n  { \"name\": \"Armenia\", \"code\": \"AM\" },\n  { \"name\": \"Aruba\", \"code\": \"AW\" },\n  { \"name\": \"Australia\", \"code\": \"AU\" },\n  { \"name\": \"Austria\", \"code\": \"AT\" },\n  { \"name\": \"Azerbaijan\", \"code\": \"AZ\" },\n  { \"name\": \"Bahamas\", \"code\": \"BS\" },\n  { \"name\": \"Bahrain\", \"code\": \"BH\" },\n  { \"name\": \"Bangladesh\", \"code\": \"BD\" },\n  { \"name\": \"Barbados\", \"code\": \"BB\" },\n  { \"name\": \"Belarus\", \"code\": \"BY\" },\n  { \"name\": \"Belgium\", \"code\": \"BE\" },\n  { \"name\": \"Belize\", \"code\": \"BZ\" },\n  { \"name\": \"Benin\", \"code\": \"BJ\" },\n  { \"name\": \"Bermuda\", \"code\": \"BM\" },\n  { \"name\": \"Bhutan\", \"code\": \"BT\" },\n  { \"name\": \"Bolivia\", \"code\": \"BO\" },\n  { \"name\": \"Bosnia and Herzegovina\", \"code\": \"BA\" },\n  { \"name\": \"Botswana\", \"code\": \"BW\" },\n  { \"name\": \"Bouvet Island\", \"code\": \"BV\" },\n  { \"name\": \"Brazil\", \"code\": \"BR\" },\n  { \"name\": \"British Indian Ocean Territory\", \"code\": \"IO\" },\n  { \"name\": \"Brunei Darussalam\", \"code\": \"BN\" },\n  { \"name\": \"Bulgaria\", \"code\": \"BG\" },\n  { \"name\": \"Burkina Faso\", \"code\": \"BF\" },\n  { \"name\": \"Burundi\", \"code\": \"BI\" },\n  { \"name\": \"Cambodia\", \"code\": \"KH\" },\n  { \"name\": \"Cameroon\", \"code\": \"CM\" },\n  { \"name\": \"Canada\", \"code\": \"CA\" },\n  { \"name\": \"Cape Verde\", \"code\": \"CV\" },\n  { \"name\": \"Cayman Islands\", \"code\": \"KY\" },\n  { \"name\": \"Central African Republic\", \"code\": \"CF\" },\n  { \"name\": \"Chad\", \"code\": \"TD\" },\n  { \"name\": \"Chile\", \"code\": \"CL\" },\n  { \"name\": \"China\", \"code\": \"CN\" },\n  { \"name\": \"Christmas Island\", \"code\": \"CX\" },\n  { \"name\": \"Cocos (Keeling) Islands\", \"code\": \"CC\" },\n  { \"name\": \"Colombia\", \"code\": \"CO\" },\n  { \"name\": \"Comoros\", \"code\": \"KM\" },\n  { \"name\": \"Congo\", \"code\": \"CG\" },\n  { \"name\": \"Congo, The Democratic Republic of the\", \"code\": \"CD\" },\n  { \"name\": \"Cook Islands\", \"code\": \"CK\" },\n  { \"name\": \"Costa Rica\", \"code\": \"CR\" },\n  { \"name\": \"Cote D'Ivoire\", \"code\": \"CI\" },\n  { \"name\": \"Croatia\", \"code\": \"HR\" },\n  { \"name\": \"Cuba\", \"code\": \"CU\" },\n  { \"name\": \"Cyprus\", \"code\": \"CY\" },\n  { \"name\": \"Czech Republic\", \"code\": \"CZ\" },\n  { \"name\": \"Denmark\", \"code\": \"DK\" },\n  { \"name\": \"Djibouti\", \"code\": \"DJ\" },\n  { \"name\": \"Dominica\", \"code\": \"DM\" },\n  { \"name\": \"Dominican Republic\", \"code\": \"DO\" },\n  { \"name\": \"Ecuador\", \"code\": \"EC\" },\n  { \"name\": \"Egypt\", \"code\": \"EG\" },\n  { \"name\": \"El Salvador\", \"code\": \"SV\" },\n  { \"name\": \"Equatorial Guinea\", \"code\": \"GQ\" },\n  { \"name\": \"Eritrea\", \"code\": \"ER\" },\n  { \"name\": \"Estonia\", \"code\": \"EE\" },\n  { \"name\": \"Ethiopia\", \"code\": \"ET\" },\n  { \"name\": \"Falkland Islands (Malvinas)\", \"code\": \"FK\" },\n  { \"name\": \"Faroe Islands\", \"code\": \"FO\" },\n  { \"name\": \"Fiji\", \"code\": \"FJ\" },\n  { \"name\": \"Finland\", \"code\": \"FI\" },\n  { \"name\": \"France\", \"code\": \"FR\" },\n  { \"name\": \"French Guiana\", \"code\": \"GF\" },\n  { \"name\": \"French Polynesia\", \"code\": \"PF\" },\n  { \"name\": \"French Southern Territories\", \"code\": \"TF\" },\n  { \"name\": \"Gabon\", \"code\": \"GA\" },\n  { \"name\": \"Gambia\", \"code\": \"GM\" },\n  { \"name\": \"Georgia\", \"code\": \"GE\" },\n  { \"name\": \"Germany\", \"code\": \"DE\" },\n  { \"name\": \"Ghana\", \"code\": \"GH\" },\n  { \"name\": \"Gibraltar\", \"code\": \"GI\" },\n  { \"name\": \"Greece\", \"code\": \"GR\" },\n  { \"name\": \"Greenland\", \"code\": \"GL\" },\n  { \"name\": \"Grenada\", \"code\": \"GD\" },\n  { \"name\": \"Guadeloupe\", \"code\": \"GP\" },\n  { \"name\": \"Guam\", \"code\": \"GU\" },\n  { \"name\": \"Guatemala\", \"code\": \"GT\" },\n  { \"name\": \"Guernsey\", \"code\": \"GG\" },\n  { \"name\": \"Guinea\", \"code\": \"GN\" },\n  { \"name\": \"Guinea-Bissau\", \"code\": \"GW\" },\n  { \"name\": \"Guyana\", \"code\": \"GY\" },\n  { \"name\": \"Haiti\", \"code\": \"HT\" },\n  { \"name\": \"Heard Island and Mcdonald Islands\", \"code\": \"HM\" },\n  { \"name\": \"Holy See (Vatican City State)\", \"code\": \"VA\" },\n  { \"name\": \"Honduras\", \"code\": \"HN\" },\n  { \"name\": \"Hong Kong\", \"code\": \"HK\" },\n  { \"name\": \"Hungary\", \"code\": \"HU\" },\n  { \"name\": \"Iceland\", \"code\": \"IS\" },\n  { \"name\": \"India\", \"code\": \"IN\" },\n  { \"name\": \"Indonesia\", \"code\": \"ID\" },\n  { \"name\": \"Iran, Islamic Republic Of\", \"code\": \"IR\" },\n  { \"name\": \"Iraq\", \"code\": \"IQ\" },\n  { \"name\": \"Ireland\", \"code\": \"IE\" },\n  { \"name\": \"Isle of Man\", \"code\": \"IM\" },\n  { \"name\": \"Israel\", \"code\": \"IL\" },\n  { \"name\": \"Italy\", \"code\": \"IT\" },\n  { \"name\": \"Jamaica\", \"code\": \"JM\" },\n  { \"name\": \"Japan\", \"code\": \"JP\" },\n  { \"name\": \"Jersey\", \"code\": \"JE\" },\n  { \"name\": \"Jordan\", \"code\": \"JO\" },\n  { \"name\": \"Kazakhstan\", \"code\": \"KZ\" },\n  { \"name\": \"Kenya\", \"code\": \"KE\" },\n  { \"name\": \"Kiribati\", \"code\": \"KI\" },\n  { \"name\": \"Korea, Democratic People'S Republic of\", \"code\": \"KP\" },\n  { \"name\": \"Korea, Republic of\", \"code\": \"KR\" },\n  { \"name\": \"Kuwait\", \"code\": \"KW\" },\n  { \"name\": \"Kyrgyzstan\", \"code\": \"KG\" },\n  { \"name\": \"Lao People'S Democratic Republic\", \"code\": \"LA\" },\n  { \"name\": \"Latvia\", \"code\": \"LV\" },\n  { \"name\": \"Lebanon\", \"code\": \"LB\" },\n  { \"name\": \"Lesotho\", \"code\": \"LS\" },\n  { \"name\": \"Liberia\", \"code\": \"LR\" },\n  { \"name\": \"Libyan Arab Jamahiriya\", \"code\": \"LY\" },\n  { \"name\": \"Liechtenstein\", \"code\": \"LI\" },\n  { \"name\": \"Lithuania\", \"code\": \"LT\" },\n  { \"name\": \"Luxembourg\", \"code\": \"LU\" },\n  { \"name\": \"Macao\", \"code\": \"MO\" },\n  { \"name\": \"Macedonia, The Former Yugoslav Republic of\", \"code\": \"MK\" },\n  { \"name\": \"Madagascar\", \"code\": \"MG\" },\n  { \"name\": \"Malawi\", \"code\": \"MW\" },\n  { \"name\": \"Malaysia\", \"code\": \"MY\" },\n  { \"name\": \"Maldives\", \"code\": \"MV\" },\n  { \"name\": \"Mali\", \"code\": \"ML\" },\n  { \"name\": \"Malta\", \"code\": \"MT\" },\n  { \"name\": \"Marshall Islands\", \"code\": \"MH\" },\n  { \"name\": \"Martinique\", \"code\": \"MQ\" },\n  { \"name\": \"Mauritania\", \"code\": \"MR\" },\n  { \"name\": \"Mauritius\", \"code\": \"MU\" },\n  { \"name\": \"Mayotte\", \"code\": \"YT\" },\n  { \"name\": \"Mexico\", \"code\": \"MX\" },\n  { \"name\": \"Micronesia, Federated States of\", \"code\": \"FM\" },\n  { \"name\": \"Moldova, Republic of\", \"code\": \"MD\" },\n  { \"name\": \"Monaco\", \"code\": \"MC\" },\n  { \"name\": \"Mongolia\", \"code\": \"MN\" },\n  { \"name\": \"Montserrat\", \"code\": \"MS\" },\n  { \"name\": \"Morocco\", \"code\": \"MA\" },\n  { \"name\": \"Mozambique\", \"code\": \"MZ\" },\n  { \"name\": \"Myanmar\", \"code\": \"MM\" },\n  { \"name\": \"Namibia\", \"code\": \"NA\" },\n  { \"name\": \"Nauru\", \"code\": \"NR\" },\n  { \"name\": \"Nepal\", \"code\": \"NP\" },\n  { \"name\": \"Netherlands\", \"code\": \"NL\" },\n  { \"name\": \"Netherlands Antilles\", \"code\": \"AN\" },\n  { \"name\": \"New Caledonia\", \"code\": \"NC\" },\n  { \"name\": \"New Zealand\", \"code\": \"NZ\" },\n  { \"name\": \"Nicaragua\", \"code\": \"NI\" },\n  { \"name\": \"Niger\", \"code\": \"NE\" },\n  { \"name\": \"Nigeria\", \"code\": \"NG\" },\n  { \"name\": \"Niue\", \"code\": \"NU\" },\n  { \"name\": \"Norfolk Island\", \"code\": \"NF\" },\n  { \"name\": \"Northern Mariana Islands\", \"code\": \"MP\" },\n  { \"name\": \"Norway\", \"code\": \"NO\" },\n  { \"name\": \"Oman\", \"code\": \"OM\" },\n  { \"name\": \"Pakistan\", \"code\": \"PK\" },\n  { \"name\": \"Palau\", \"code\": \"PW\" },\n  { \"name\": \"Palestinian Territory, Occupied\", \"code\": \"PS\" },\n  { \"name\": \"Panama\", \"code\": \"PA\" },\n  { \"name\": \"Papua New Guinea\", \"code\": \"PG\" },\n  { \"name\": \"Paraguay\", \"code\": \"PY\" },\n  { \"name\": \"Peru\", \"code\": \"PE\" },\n  { \"name\": \"Philippines\", \"code\": \"PH\" },\n  { \"name\": \"Pitcairn\", \"code\": \"PN\" },\n  { \"name\": \"Poland\", \"code\": \"PL\" },\n  { \"name\": \"Portugal\", \"code\": \"PT\" },\n  { \"name\": \"Puerto Rico\", \"code\": \"PR\" },\n  { \"name\": \"Qatar\", \"code\": \"QA\" },\n  { \"name\": \"Reunion\", \"code\": \"RE\" },\n  { \"name\": \"Romania\", \"code\": \"RO\" },\n  { \"name\": \"Russian Federation\", \"code\": \"RU\" },\n  { \"name\": \"RWANDA\", \"code\": \"RW\" },\n  { \"name\": \"Saint Helena\", \"code\": \"SH\" },\n  { \"name\": \"Saint Kitts and Nevis\", \"code\": \"KN\" },\n  { \"name\": \"Saint Lucia\", \"code\": \"LC\" },\n  { \"name\": \"Saint Pierre and Miquelon\", \"code\": \"PM\" },\n  { \"name\": \"Saint Vincent and the Grenadines\", \"code\": \"VC\" },\n  { \"name\": \"Samoa\", \"code\": \"WS\" },\n  { \"name\": \"San Marino\", \"code\": \"SM\" },\n  { \"name\": \"Sao Tome and Principe\", \"code\": \"ST\" },\n  { \"name\": \"Saudi Arabia\", \"code\": \"SA\" },\n  { \"name\": \"Senegal\", \"code\": \"SN\" },\n  { \"name\": \"Serbia and Montenegro\", \"code\": \"CS\" },\n  { \"name\": \"Seychelles\", \"code\": \"SC\" },\n  { \"name\": \"Sierra Leone\", \"code\": \"SL\" },\n  { \"name\": \"Singapore\", \"code\": \"SG\" },\n  { \"name\": \"Slovakia\", \"code\": \"SK\" },\n  { \"name\": \"Slovenia\", \"code\": \"SI\" },\n  { \"name\": \"Solomon Islands\", \"code\": \"SB\" },\n  { \"name\": \"Somalia\", \"code\": \"SO\" },\n  { \"name\": \"South Africa\", \"code\": \"ZA\" },\n  { \"name\": \"South Georgia and the South Sandwich Islands\", \"code\": \"GS\" },\n  { \"name\": \"Spain\", \"code\": \"ES\" },\n  { \"name\": \"Sri Lanka\", \"code\": \"LK\" },\n  { \"name\": \"Sudan\", \"code\": \"SD\" },\n  { \"name\": \"Suriname\", \"code\": \"SR\" },\n  { \"name\": \"Svalbard and Jan Mayen\", \"code\": \"SJ\" },\n  { \"name\": \"Swaziland\", \"code\": \"SZ\" },\n  { \"name\": \"Sweden\", \"code\": \"SE\" },\n  { \"name\": \"Switzerland\", \"code\": \"CH\" },\n  { \"name\": \"Syrian Arab Republic\", \"code\": \"SY\" },\n  { \"name\": \"Taiwan, Province of China\", \"code\": \"TW\" },\n  { \"name\": \"Tajikistan\", \"code\": \"TJ\" },\n  { \"name\": \"Tanzania, United Republic of\", \"code\": \"TZ\" },\n  { \"name\": \"Thailand\", \"code\": \"TH\" },\n  { \"name\": \"Timor-Leste\", \"code\": \"TL\" },\n  { \"name\": \"Togo\", \"code\": \"TG\" },\n  { \"name\": \"Tokelau\", \"code\": \"TK\" },\n  { \"name\": \"Tonga\", \"code\": \"TO\" },\n  { \"name\": \"Trinidad and Tobago\", \"code\": \"TT\" },\n  { \"name\": \"Tunisia\", \"code\": \"TN\" },\n  { \"name\": \"Turkey\", \"code\": \"TR\" },\n  { \"name\": \"Turkmenistan\", \"code\": \"TM\" },\n  { \"name\": \"Turks and Caicos Islands\", \"code\": \"TC\" },\n  { \"name\": \"Tuvalu\", \"code\": \"TV\" },\n  { \"name\": \"Uganda\", \"code\": \"UG\" },\n  { \"name\": \"Ukraine\", \"code\": \"UA\" },\n  { \"name\": \"United Arab Emirates\", \"code\": \"AE\" },\n  { \"name\": \"United Kingdom\", \"code\": \"GB\" },\n  { \"name\": \"United States\", \"code\": \"US\" },\n  { \"name\": \"United States Minor Outlying Islands\", \"code\": \"UM\" },\n  { \"name\": \"Uruguay\", \"code\": \"UY\" },\n  { \"name\": \"Uzbekistan\", \"code\": \"UZ\" },\n  { \"name\": \"Vanuatu\", \"code\": \"VU\" },\n  { \"name\": \"Venezuela\", \"code\": \"VE\" },\n  { \"name\": \"Viet Nam\", \"code\": \"VN\" },\n  { \"name\": \"Virgin Islands, British\", \"code\": \"VG\" },\n  { \"name\": \"Virgin Islands, U.S.\", \"code\": \"VI\" },\n  { \"name\": \"Wallis and Futuna\", \"code\": \"WF\" },\n  { \"name\": \"Western Sahara\", \"code\": \"EH\" },\n  { \"name\": \"Yemen\", \"code\": \"YE\" },\n  { \"name\": \"Zambia\", \"code\": \"ZM\" },\n  { \"name\": \"Zimbabwe\", \"code\": \"ZW\" }\n]\n;","export const cityLocation = document.querySelector('.w-location');\nexport const time = document.querySelector('.time');\nexport const description = document.querySelector('.w-desc');\nexport const temperature = document.querySelector('.w-string');\nexport const img = document.querySelector('.w-icon');\nexport const feelsLike = document.querySelector('.w-feels-like');\nexport const humidity = document.querySelector('.w-humidity');\nexport const wind = document.querySelector('.w-wind');\nexport const toggle = document.querySelector('#unit');\nexport const changeBtn = document.querySelector('.change-btn');\nexport const modalOuter = document.querySelector('.modal-outer');\nexport const closeBtn = document.querySelector('.close-btn');\nexport const saveChangeBtn = document.querySelector('.save-change-btn');\nexport const selectCity = document.querySelector('#city');\nexport const selectCountry = document.querySelector('#country');\nexport const form = document.querySelector('#w-form');\nexport const invalidInputMessage = document.querySelector(\n  '.invalid-feedback-message'\n);\n","import countriesList from '../countries.json';\nimport { selectCountry } from './elements.js';\n\n/**\n * toTitleCase - Captilize the first letter of each word of the weather descripiton\n * @param {String} phrase\n * @return {String}\n */\nexport function toTitleCase(phrase) {\n  return phrase\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\n/**\n * mpsToKph - conver miles per second to kilometers per hour\n * @param {Number} mps\n * @return {Number}\n */\nexport function mpsToKph(mps) {\n  return Math.round(mps * 3.6);\n}\n\n/**\n * generateOptions - Get the country list from JSON file\n * @return {String} display options of the select element\n */\nexport function generateOptions() {\n  const options = countriesList\n    .map(\n      singleCountry =>\n        `<option value=\"${singleCountry.code}\">${singleCountry.name}</option>`\n    )\n    .join('');\n  selectCountry.innerHTML = options;\n}\n","export const OPEN_WEATHER_KEY = process.env.OPEN_WEATHER_API_KEY;\nexport const OPEN_WEATHER_BASE =\n  'https://api.openweathermap.org/data/2.5/weather?q=';\nexport const TIME_ZONE_KEY = process.env.TIME_ZONE_API_KEY;\nexport const TIME_ZONE_BASE =\n  'http://api.timezonedb.com/v2.1/get-time-zone?key=';\nexport const ICON_BASE = 'http://openweathermap.org/img/wn/';\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  var desiredMonth = date.getMonth() + amount;\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}","import addDays from '../addDays/index.js';\nimport addMonths from '../addMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * var result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\n\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var dateWithMonths = addMonths(toDate(dirtyDate), months + years * 12); // Add weeks and days\n\n  var dateWithDays = addDays(dateWithMonths, days + weeks * 7); // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getISOWeekYear from '../getISOWeekYear/index.js';\nimport setISOWeekYear from '../setISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  if (options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import isValid from '../isValid/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import getQuarter from '../getQuarter/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between the given dates.\n * This function returns the difference in days as an integer whole number of 24 hour periods between two timestamps,  and thereby ignores DST changes.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n */\n\nvar MILLISECONDS_IN_DAY = 86400000;\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var result = (dateLeft - dateRight) / MILLISECONDS_IN_DAY; // round towards zero\n\n  if (result > 0) return Math.floor(result);\n  return Math.ceil(result);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addISOWeekYears from '../addISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarISOWeekYears from '../differenceInCalendarISOWeekYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport subISOWeekYears from '../subISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from '../differenceInMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from '../differenceInDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarYears from '../differenceInCalendarYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear('1584');\n  dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * var result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\n\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n\n  return dates;\n}","import addWeeks from '../addWeeks/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import eachDayOfInterval from '../eachDayOfInterval/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * var result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * var result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport endOfYear from '../endOfYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * var result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\n\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import endOfWeek from '../endOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from '../endOfDay/index.js';\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_YEAR = 525600;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import distanceInStrictWords from '../formatDistanceStrict/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInStrictWords(dirtyDate, Date.now(), dirtyOptions);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\n\nexport default function formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\n\nexport default function formatRFC3339(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var fractionDigits = options.fractionDigits == null ? 0 : toInteger(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(absoluteOffset / 60, 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2); // Result variables.\n\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport format from '../format/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * var result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from '../toDate/index.js';\nimport isLeapYear from '../isLeapYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n\n  if (isNaN(date)) {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * var result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from '../getTime/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from '../getWeekYear/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from '../getDate/index.js';\nimport getDay from '../getDay/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * var result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toDate from '../toDate/index.js';\nimport endOfDay from '../endOfDay/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfHour from '../startOfHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\n\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import startOfMinute from '../startOfMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfQuarter from '../startOfQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfSecond from '../startOfSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import isSameHour from '../isSameHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from '../isSameISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from '../isSameMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from '../isSameMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from '../isSameQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from '../isSameSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from '../isSameYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import isSameDay from '../isSameDay/index.js';\nimport subDays from '../subDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import lastDayOfWeek from '../lastDayOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/lightFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport isValid from '../isValid/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '1987-02-11'\n */\n\nexport default function lightFormat(dirtyDate, dirtyFormatStr) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring, null, {});\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name min\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).reverse();\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    result.setFullYear(dirtyDate.getUTCFullYear());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n *     - `2000-03-15T05:20:10Z`: Without milliseconds\n *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n *     - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n *     - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n *     - A `Date` instance will be cloned\n *     - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\n\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from '../addDays/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff, options);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport addDays from '../addDays/index.js';\nimport getISODay from '../getISODay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getISOWeek from '../getISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from '../getWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\n\nexport default function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, dirtyOptions) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, dirtyOptions));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, dirtyOptions);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addBusinessDays from '../addBusinessDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addHours from '../addHours/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMinutes from '../addMinutes/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addQuarters from '../addQuarters/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addSeconds from '../addSeconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","/**\n *  Maximum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n *  Minimum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\n\nexport var minTime = -maxTime;","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\nexport { default as add } from './add/index.js';\nexport { default as addBusinessDays } from './addBusinessDays/index.js';\nexport { default as addDays } from './addDays/index.js';\nexport { default as addHours } from './addHours/index.js';\nexport { default as addISOWeekYears } from './addISOWeekYears/index.js';\nexport { default as addMilliseconds } from './addMilliseconds/index.js';\nexport { default as addMinutes } from './addMinutes/index.js';\nexport { default as addMonths } from './addMonths/index.js';\nexport { default as addQuarters } from './addQuarters/index.js';\nexport { default as addSeconds } from './addSeconds/index.js';\nexport { default as addWeeks } from './addWeeks/index.js';\nexport { default as addYears } from './addYears/index.js';\nexport { default as areIntervalsOverlapping } from './areIntervalsOverlapping/index.js';\nexport { default as closestIndexTo } from './closestIndexTo/index.js';\nexport { default as closestTo } from './closestTo/index.js';\nexport { default as compareAsc } from './compareAsc/index.js';\nexport { default as compareDesc } from './compareDesc/index.js';\nexport { default as differenceInBusinessDays } from './differenceInBusinessDays/index.js';\nexport { default as differenceInCalendarDays } from './differenceInCalendarDays/index.js';\nexport { default as differenceInCalendarISOWeekYears } from './differenceInCalendarISOWeekYears/index.js';\nexport { default as differenceInCalendarISOWeeks } from './differenceInCalendarISOWeeks/index.js';\nexport { default as differenceInCalendarMonths } from './differenceInCalendarMonths/index.js';\nexport { default as differenceInCalendarQuarters } from './differenceInCalendarQuarters/index.js';\nexport { default as differenceInCalendarWeeks } from './differenceInCalendarWeeks/index.js';\nexport { default as differenceInCalendarYears } from './differenceInCalendarYears/index.js';\nexport { default as differenceInDays } from './differenceInDays/index.js';\nexport { default as differenceInHours } from './differenceInHours/index.js';\nexport { default as differenceInISOWeekYears } from './differenceInISOWeekYears/index.js';\nexport { default as differenceInMilliseconds } from './differenceInMilliseconds/index.js';\nexport { default as differenceInMinutes } from './differenceInMinutes/index.js';\nexport { default as differenceInMonths } from './differenceInMonths/index.js';\nexport { default as differenceInQuarters } from './differenceInQuarters/index.js';\nexport { default as differenceInSeconds } from './differenceInSeconds/index.js';\nexport { default as differenceInWeeks } from './differenceInWeeks/index.js';\nexport { default as differenceInYears } from './differenceInYears/index.js';\nexport { default as eachDayOfInterval } from './eachDayOfInterval/index.js';\nexport { default as eachMonthOfInterval } from './eachMonthOfInterval/index.js';\nexport { default as eachWeekOfInterval } from './eachWeekOfInterval/index.js';\nexport { default as eachWeekendOfInterval } from './eachWeekendOfInterval/index.js';\nexport { default as eachWeekendOfMonth } from './eachWeekendOfMonth/index.js';\nexport { default as eachWeekendOfYear } from './eachWeekendOfYear/index.js';\nexport { default as eachYearOfInterval } from './eachYearOfInterval/index.js';\nexport { default as endOfDay } from './endOfDay/index.js';\nexport { default as endOfDecade } from './endOfDecade/index.js';\nexport { default as endOfHour } from './endOfHour/index.js';\nexport { default as endOfISOWeek } from './endOfISOWeek/index.js';\nexport { default as endOfISOWeekYear } from './endOfISOWeekYear/index.js';\nexport { default as endOfMinute } from './endOfMinute/index.js';\nexport { default as endOfMonth } from './endOfMonth/index.js';\nexport { default as endOfQuarter } from './endOfQuarter/index.js';\nexport { default as endOfSecond } from './endOfSecond/index.js';\nexport { default as endOfToday } from './endOfToday/index.js';\nexport { default as endOfTomorrow } from './endOfTomorrow/index.js';\nexport { default as endOfWeek } from './endOfWeek/index.js';\nexport { default as endOfYear } from './endOfYear/index.js';\nexport { default as endOfYesterday } from './endOfYesterday/index.js';\nexport { default as format } from './format/index.js';\nexport { default as formatDistance } from './formatDistance/index.js';\nexport { default as formatDistanceStrict } from './formatDistanceStrict/index.js';\nexport { default as formatDistanceToNow } from './formatDistanceToNow/index.js';\nexport { default as formatDistanceToNowStrict } from './formatDistanceToNowStrict/index.js';\nexport { default as formatISO } from './formatISO/index.js';\nexport { default as formatISO9075 } from './formatISO9075/index.js';\nexport { default as formatRFC3339 } from './formatRFC3339/index.js';\nexport { default as formatRFC7231 } from './formatRFC7231/index.js';\nexport { default as formatRelative } from './formatRelative/index.js';\nexport { default as fromUnixTime } from './fromUnixTime/index.js';\nexport { default as getDate } from './getDate/index.js';\nexport { default as getDay } from './getDay/index.js';\nexport { default as getDayOfYear } from './getDayOfYear/index.js';\nexport { default as getDaysInMonth } from './getDaysInMonth/index.js';\nexport { default as getDaysInYear } from './getDaysInYear/index.js';\nexport { default as getDecade } from './getDecade/index.js';\nexport { default as getHours } from './getHours/index.js';\nexport { default as getISODay } from './getISODay/index.js';\nexport { default as getISOWeek } from './getISOWeek/index.js';\nexport { default as getISOWeekYear } from './getISOWeekYear/index.js';\nexport { default as getISOWeeksInYear } from './getISOWeeksInYear/index.js';\nexport { default as getMilliseconds } from './getMilliseconds/index.js';\nexport { default as getMinutes } from './getMinutes/index.js';\nexport { default as getMonth } from './getMonth/index.js';\nexport { default as getOverlappingDaysInIntervals } from './getOverlappingDaysInIntervals/index.js';\nexport { default as getQuarter } from './getQuarter/index.js';\nexport { default as getSeconds } from './getSeconds/index.js';\nexport { default as getTime } from './getTime/index.js';\nexport { default as getUnixTime } from './getUnixTime/index.js';\nexport { default as getWeek } from './getWeek/index.js';\nexport { default as getWeekOfMonth } from './getWeekOfMonth/index.js';\nexport { default as getWeekYear } from './getWeekYear/index.js';\nexport { default as getWeeksInMonth } from './getWeeksInMonth/index.js';\nexport { default as getYear } from './getYear/index.js';\nexport { default as isAfter } from './isAfter/index.js';\nexport { default as isBefore } from './isBefore/index.js';\nexport { default as isDate } from './isDate/index.js';\nexport { default as isEqual } from './isEqual/index.js';\nexport { default as isExists } from './isExists/index.js';\nexport { default as isFirstDayOfMonth } from './isFirstDayOfMonth/index.js';\nexport { default as isFriday } from './isFriday/index.js';\nexport { default as isFuture } from './isFuture/index.js';\nexport { default as isLastDayOfMonth } from './isLastDayOfMonth/index.js';\nexport { default as isLeapYear } from './isLeapYear/index.js';\nexport { default as isMonday } from './isMonday/index.js';\nexport { default as isPast } from './isPast/index.js';\nexport { default as isSameDay } from './isSameDay/index.js';\nexport { default as isSameHour } from './isSameHour/index.js';\nexport { default as isSameISOWeek } from './isSameISOWeek/index.js';\nexport { default as isSameISOWeekYear } from './isSameISOWeekYear/index.js';\nexport { default as isSameMinute } from './isSameMinute/index.js';\nexport { default as isSameMonth } from './isSameMonth/index.js';\nexport { default as isSameQuarter } from './isSameQuarter/index.js';\nexport { default as isSameSecond } from './isSameSecond/index.js';\nexport { default as isSameWeek } from './isSameWeek/index.js';\nexport { default as isSameYear } from './isSameYear/index.js';\nexport { default as isSaturday } from './isSaturday/index.js';\nexport { default as isSunday } from './isSunday/index.js';\nexport { default as isThisHour } from './isThisHour/index.js';\nexport { default as isThisISOWeek } from './isThisISOWeek/index.js';\nexport { default as isThisMinute } from './isThisMinute/index.js';\nexport { default as isThisMonth } from './isThisMonth/index.js';\nexport { default as isThisQuarter } from './isThisQuarter/index.js';\nexport { default as isThisSecond } from './isThisSecond/index.js';\nexport { default as isThisWeek } from './isThisWeek/index.js';\nexport { default as isThisYear } from './isThisYear/index.js';\nexport { default as isThursday } from './isThursday/index.js';\nexport { default as isToday } from './isToday/index.js';\nexport { default as isTomorrow } from './isTomorrow/index.js';\nexport { default as isTuesday } from './isTuesday/index.js';\nexport { default as isValid } from './isValid/index.js';\nexport { default as isWednesday } from './isWednesday/index.js';\nexport { default as isWeekend } from './isWeekend/index.js';\nexport { default as isWithinInterval } from './isWithinInterval/index.js';\nexport { default as isYesterday } from './isYesterday/index.js';\nexport { default as lastDayOfDecade } from './lastDayOfDecade/index.js';\nexport { default as lastDayOfISOWeek } from './lastDayOfISOWeek/index.js';\nexport { default as lastDayOfISOWeekYear } from './lastDayOfISOWeekYear/index.js';\nexport { default as lastDayOfMonth } from './lastDayOfMonth/index.js';\nexport { default as lastDayOfQuarter } from './lastDayOfQuarter/index.js';\nexport { default as lastDayOfWeek } from './lastDayOfWeek/index.js';\nexport { default as lastDayOfYear } from './lastDayOfYear/index.js';\nexport { default as lightFormat } from './lightFormat/index.js';\nexport { default as max } from './max/index.js';\nexport { default as min } from './min/index.js';\nexport { default as parse } from './parse/index.js';\nexport { default as parseISO } from './parseISO/index.js';\nexport { default as parseJSON } from './parseJSON/index.js';\nexport { default as roundToNearestMinutes } from './roundToNearestMinutes/index.js';\nexport { default as set } from './set/index.js';\nexport { default as setDate } from './setDate/index.js';\nexport { default as setDay } from './setDay/index.js';\nexport { default as setDayOfYear } from './setDayOfYear/index.js';\nexport { default as setHours } from './setHours/index.js';\nexport { default as setISODay } from './setISODay/index.js';\nexport { default as setISOWeek } from './setISOWeek/index.js';\nexport { default as setISOWeekYear } from './setISOWeekYear/index.js';\nexport { default as setMilliseconds } from './setMilliseconds/index.js';\nexport { default as setMinutes } from './setMinutes/index.js';\nexport { default as setMonth } from './setMonth/index.js';\nexport { default as setQuarter } from './setQuarter/index.js';\nexport { default as setSeconds } from './setSeconds/index.js';\nexport { default as setWeek } from './setWeek/index.js';\nexport { default as setWeekYear } from './setWeekYear/index.js';\nexport { default as setYear } from './setYear/index.js';\nexport { default as startOfDay } from './startOfDay/index.js';\nexport { default as startOfDecade } from './startOfDecade/index.js';\nexport { default as startOfHour } from './startOfHour/index.js';\nexport { default as startOfISOWeek } from './startOfISOWeek/index.js';\nexport { default as startOfISOWeekYear } from './startOfISOWeekYear/index.js';\nexport { default as startOfMinute } from './startOfMinute/index.js';\nexport { default as startOfMonth } from './startOfMonth/index.js';\nexport { default as startOfQuarter } from './startOfQuarter/index.js';\nexport { default as startOfSecond } from './startOfSecond/index.js';\nexport { default as startOfToday } from './startOfToday/index.js';\nexport { default as startOfTomorrow } from './startOfTomorrow/index.js';\nexport { default as startOfWeek } from './startOfWeek/index.js';\nexport { default as startOfWeekYear } from './startOfWeekYear/index.js';\nexport { default as startOfYear } from './startOfYear/index.js';\nexport { default as startOfYesterday } from './startOfYesterday/index.js';\nexport { default as sub } from './sub/index.js';\nexport { default as subBusinessDays } from './subBusinessDays/index.js';\nexport { default as subDays } from './subDays/index.js';\nexport { default as subHours } from './subHours/index.js';\nexport { default as subISOWeekYears } from './subISOWeekYears/index.js';\nexport { default as subMilliseconds } from './subMilliseconds/index.js';\nexport { default as subMinutes } from './subMinutes/index.js';\nexport { default as subMonths } from './subMonths/index.js';\nexport { default as subQuarters } from './subQuarters/index.js';\nexport { default as subSeconds } from './subSeconds/index.js';\nexport { default as subWeeks } from './subWeeks/index.js';\nexport { default as subYears } from './subYears/index.js';\nexport { default as toDate } from './toDate/index.js';\nexport * from './constants/index.js';","import { format } from 'date-fns';\n// eslint-disable-next-line prettier/prettier\nimport { OPEN_WEATHER_KEY, OPEN_WEATHER_BASE, TIME_ZONE_KEY, TIME_ZONE_BASE } from './const.js';\nimport { cityLocation, feelsLike, humidity, wind } from './elements.js';\n\n/**\n * fetchLocalTime - Fetch local time based on latitude and longitude\n * @param {String} lat\n * @param {String} lng\n * @return {Object}\n */\nexport async function fetchLocalTime(lat, lng) {\n  let localTime = null;\n  try {\n    const tzResponse = await fetch(\n      `${TIME_ZONE_BASE}${TIME_ZONE_KEY}&format=json&by=position&lat=${lat}&lng=${lng}`\n    );\n    const tzData = await tzResponse.json();\n    localTime = format(new Date(tzData.formatted), 'cccc hh:mm aaaa');\n  } catch (error) {\n    localTime = '';\n    console.log('Failed to Fetch Local Time Data');\n  }\n  return localTime;\n}\n\n/**\n * failedToFetch - Catch if the API fetch fails\n * @param {String} error\n */\nexport function failedToFetch(error) {\n  console.log(error);\n  cityLocation.textContent = 'Data Unavailable';\n  feelsLike.textContent = '---';\n  humidity.textContent = '---';\n  wind.textContent = '---';\n}\n\n/**\n * fetchData - Fetch weather data based on the city\n * @param {String} cityID\n * @param {String} countryID optional\n * @return {Object} Metric and Imperial Data\n */\nexport async function fetchData(cityID, countryID) {\n  let metricResponse = null;\n  let imperialResponse = null;\n\n  try {\n    metricResponse = await fetch(\n      `${OPEN_WEATHER_BASE}${cityID},${countryID}&appid=${OPEN_WEATHER_KEY}&units=metric`\n    );\n    imperialResponse = await fetch(\n      `${OPEN_WEATHER_BASE}${cityID},${countryID}&appid=${OPEN_WEATHER_KEY}&units=imperial`\n    );\n\n    if (metricResponse.status > 404 || imperialResponse.status > 404) {\n      throw new Error('Failed to Fetch Data');\n    }\n\n    const metricData = await metricResponse.json();\n    const imperialData = await imperialResponse.json();\n\n    return {\n      metricData,\n      imperialData,\n    };\n  } catch (error) {\n    failedToFetch(error);\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\n|\\r|\\r\\n/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = options.path\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","import backgroundImage from './background.js';\nimport { toTitleCase, mpsToKph, generateOptions } from './utils.js';\n// eslint-disable-next-line prettier/prettier\nimport { img, cityLocation, description, temperature, feelsLike, humidity, wind, closeBtn, saveChangeBtn, changeBtn, selectCity, selectCountry, form, toggle, time, modalOuter, invalidInputMessage } from './elements.js';\nimport { ICON_BASE } from './const.js';\nimport { fetchLocalTime, fetchData, failedToFetch } from './fetch.js';\n\nrequire('dotenv').config();\n\nconst location = {\n  city: 'Mississauga',\n  country: 'CA',\n};\nlet tempUnit = 'C';\n\n/**\n * openModal - handle modal opening\n */\nfunction openModal() {\n  modalOuter.classList.add('open');\n}\n/**\n * closeModal - handle modal closing\n */\nfunction closeModal() {\n  modalOuter.classList.remove('open');\n  form.reset();\n  invalidInputMessage.hidden = true;\n  selectCountry.classList.remove('invalid-feedback');\n  selectCity.classList.remove('invalid-feedback');\n}\n\n/**\n * validadeNewEntry - Vaidade new city entred by user\n * @param {String} errorCode\n * @return {Boolean}\n */\nfunction validadeNewEntry(errorCode) {\n  if (errorCode === '404') {\n    selectCountry.classList.add('invalid-feedback');\n    selectCity.classList.add('invalid-feedback');\n    invalidInputMessage.hidden = false;\n    return false;\n  }\n  closeModal();\n  return true;\n}\n\n/**\n * displayData - Get data from API and displays to the browser\n * @param {String} unit\n * @param {String} cityID\n * @param {String} countryID\n */\nasync function displayData(unit, cityID, countryID) {\n  let cityWeather = null;\n  try {\n    cityWeather = await fetchData(cityID, countryID);\n  } catch (error) {\n    failedToFetch();\n    return;\n  }\n\n  if (!validadeNewEntry(cityWeather.metricData.cod)) {\n    return;\n  }\n  const longitude = cityWeather.metricData.coord.lon;\n  const latitude = cityWeather.metricData.coord.lat;\n\n  time.textContent = await fetchLocalTime(latitude, longitude);\n  cityLocation.textContent = `${cityWeather.metricData.name} - ${cityWeather.metricData.sys.country}`;\n  description.textContent = toTitleCase(\n    cityWeather.metricData.weather[0].description\n  );\n\n  // Change output accroding to the unit of measurement\n  if (unit === 'C') {\n    temperature.textContent = `${Math.round(\n      cityWeather.metricData.main.temp\n    )}°C`;\n    feelsLike.textContent = `${Math.round(\n      cityWeather.metricData.main.feels_like\n    )}°C`;\n    wind.textContent = `${mpsToKph(cityWeather.metricData.wind.speed)} kph`;\n  } else {\n    temperature.textContent = `${Math.round(\n      cityWeather.imperialData.main.temp\n    )}°F`;\n    feelsLike.textContent = ` ${Math.round(\n      cityWeather.imperialData.main.feels_like\n    )}°F`;\n    wind.textContent = `${Math.round(cityWeather.imperialData.wind.speed)} mph`;\n  }\n\n  img.src = `${ICON_BASE}${cityWeather.metricData.weather[0].icon}@2x.png`;\n  humidity.textContent = `${cityWeather.metricData.main.humidity}%`;\n  backgroundImage(cityWeather.metricData.weather[0].icon);\n\n  mirrorToLocalStorage();\n}\n\n/**\n * handleCick - handle new city selection\n * @param {Event} event\n */\nfunction handleClick(event) {\n  event.preventDefault();\n  if (event.type === 'click' || event.type === 'submit') {\n    location.city = selectCity.value;\n    location.country = selectCountry.value;\n    displayData(tempUnit, location.city, location.country);\n  }\n}\n\n// Local Storage\n/**\n * mirrorToLocalStorage - update Local Storage\n * * @return {JSON}\n */\nfunction mirrorToLocalStorage() {\n  localStorage.setItem('location', JSON.stringify(location));\n}\n\n/**\n * restoreFromLocalStorage - retrieve data from Local Storage\n * @return {Object}\n */\nfunction restoreFromLocalStorage() {\n  const lsLocation = JSON.parse(localStorage.getItem('location'));\n\n  if (localStorage.length) {\n    location.city = lsLocation.city;\n    location.country = lsLocation.country;\n  }\n  displayData(tempUnit, location.city, location.country);\n}\n\n// Selectors\ncloseBtn.addEventListener('click', () => validadeNewEntry('000'));\nchangeBtn.addEventListener('click', openModal);\nsaveChangeBtn.addEventListener('click', handleClick);\nform.addEventListener('submit', handleClick);\ntoggle.addEventListener('change', function() {\n  if (this.checked) {\n    tempUnit = 'C';\n  } else {\n    tempUnit = 'F';\n  }\n  displayData(tempUnit, location.city, location.country);\n});\nmodalOuter.addEventListener('click', event => {\n  const isOutside = !event.target.closest('.modal-inner');\n  if (isOutside) {\n    closeModal();\n  }\n});\nwindow.addEventListener('keydown', event => {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n});\n\n// on page load\ngenerateOptions();\nrestoreFromLocalStorage();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}